stages:
  - genLicense
  - checkLicense
  - oss
  - build_B85_base
  - build_B87_base
  - build_tc321x_base
  - build_all_feature
  - plainPW_check
  - misspellChecking
  - scc
  - sensitive_word_check
  - fossid

genLicense:
  variables:
    CODE_COMPILE_ARCH: 'TC32'
    COV_PF_CATALOG: 'BLE'
  stage: genLicense
  tags:
  - LINUX
  before_script:
  script:
    - date
    - generat_license_list
    - date
  artifacts:
    paths:
    - "license_list_gen.txt"
    - "no_license_list_gen.txt"
    - "mismatch_license_file_gen.txt"
  when: manual
  
checkLicense:
  variables:
    CODE_COMPILE_ARCH: 'TC32'
    COV_PF_CATALOG: 'BLE'
  stage: checkLicense
  tags:
    - LINUX
  allow_failure: yes
  before_script:
  script:
    - date
    - check_license
    #- generat_license_list # For no license files
    - date
  artifacts:
    when: always
    paths:
    - "mismatch_license.txt"
    - "no_license*.txt"
    - "unknow_type_file.txt"

oss:
  tags:
    - OSS
  stage: oss
  script:
    - oss_checking .
  artifacts:
    when: always
    paths:
    - scan_result
  when: manual

build_B85_base:
  stage: build_B85_base
  variables:
    ECLIPSE_PROJECT_PATH: './tc_ble_sdk/build/B85/'
    ECLIPSE_PROJECT_NAME: 'tc_ble_sdk_B85'

  tags:
    - LINUX
    - TC32
  before_script:
  script:
    - which tc32-elf-gcc
    - chmod +x tc_ble_sdk/*.sh
    - date
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/acl_peripheral_demo
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/acl_c1p1_demo
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/acl_connection_demo
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/ble_controller    
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/feature_test
    - date
  when: manual

build_B87_base:
  stage: build_B87_base
  variables:
    ECLIPSE_PROJECT_PATH: './tc_ble_sdk/build/B87/'
    ECLIPSE_PROJECT_NAME: 'tc_ble_sdk_B87'

  tags:
    - LINUX
    - TC32
  before_script:
  script:
    - which tc32-elf-gcc
    - chmod +x tc_ble_sdk/*.sh
    - date
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/acl_peripheral_demo
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/acl_c1p1_demo
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/acl_connection_demo
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/ble_controller    
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/feature_test
    - date
  when: manual
  
build_tc321x_base:
  stage: build_tc321x_base
  variables:
    ECLIPSE_PROJECT_PATH: './tc_ble_sdk/build/tc321x/'
    ECLIPSE_PROJECT_NAME: 'tc_ble_sdk_tc321x'

  tags:
    - LINUX
    - TC32
  before_script:
  script:
    - which tc32-elf-gcc
    - chmod +x tc_ble_sdk/*.sh
    - date
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/acl_peripheral_demo
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/acl_c1p1_demo
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/acl_connection_demo
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/ble_controller
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/ble_remote
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $ECLIPSE_PROJECT_PATH -cleanBuild $ECLIPSE_PROJECT_NAME/feature_test
    - date
  when: manual

build_all_feature:
  stage: build_all_feature
  tags:
    - LINUX
    - TC32
  before_script:
  script:
    - which tc32-elf-gcc
    - chmod +x tc_ble_sdk/*.sh
    - date
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_LL_MD'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_LL_DLE'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_2M_CODED_PHY_CONNECTION'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_WHITELIST'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_SMP'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_GATT_API'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_EXT_ADV'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_EXT_SCAN'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_PER_ADV'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_PER_ADV_SYNC'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_PRIVACY_PERIPHERAL'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_PRIVACY_CENTRAL'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_OTA'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_SOFT_TIMER'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'   

    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_BLE_PHY'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_L2CAP_COC'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    
    - MACRO='FEATURE_TEST_MODE'
    - MACRO_VAL='TEST_FEATURE_BACKUP'
    - MACRO_PATH='./tc_ble_sdk/vendor/feature_test/feature_config.h'
    - sed  -i "/#define\s\+${MACRO}/c#define ${MACRO}\t\t${MACRO_VAL}" $MACRO_PATH
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B85/' -cleanBuild $'tc_ble_sdk_B85/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/B87/' -cleanBuild $'tc_ble_sdk_B87/feature_test'
    - $TELINK_IDE_BUILD  -data ${CI_PIPELINE_ID}_WS  -import $'./tc_ble_sdk/build/tc321x/' -cleanBuild $'tc_ble_sdk_tc321x/feature_test'
    - date
   
  when: manual

misspellChecking:
  stage: misspellChecking
  tags:
    - LINUX
  script:
    - echo "--------------- Begin ------------------------"
    - misspell-check
    - echo "---------------- End -----------------------"
  artifacts:
    when: on_failure
    paths:
    - misspell_result.txt
  when: manual    # Just check, ignore fail

scc:
  stage: scc 
  tags:
    - LINUX
  script:
    - echo "Enter scc stage"
    - scc | tee scc.txt
    - bash /usr/bin/scc_calc.sh
    - echo "The End SCC result:"
    - cat scc.txt
  artifacts:
    paths:
    - scc.txt

sensitive_word_check:
  stage: sensitive_word_check 
  tags:
    - LINUX
  script:
    - grep -E "(esb|nrf|nordic|Shock[ ]*Burst)" . -inr
    - > 
      if [ $? == 0 ]; then
        exit 1
      fi
  when: manual  # Just check, ignore matches in lib files

fossid:
  tags:
    - LINUX
  stage: fossid
  script:
    - fossid_check.sh
  artifacts:
    paths:
    - fossid*.txt
  when: manual
